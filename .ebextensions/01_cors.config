# === .ebextensions/01_cors.config ===
#
# Configure Elastic Beanstalkâ€™s Nginx proxy so that every /api/* or /authenticate/*
# request (including OPTIONS preflight) returns the proper CORS headers, and
# proxies actual requests on port 8080 (where your Flask app listens).

files:
  "/etc/nginx/conf.d/cors.conf":
    mode: "000644"
    owner: root
    group: root
    content: |
      ########################################################################
      # 1) Map $request_method to detect OPTIONS preflight (is_preflight = 1)
      ########################################################################
      map $request_method $is_preflight {
          OPTIONS  1;
          default  0;
      }

      ########################################################################
      # 2) Match any path beginning with /api/ or /authenticate/
      ########################################################################
      server {
          listen 80;

          # If this is an OPTIONS preflight, return CORS headers + 204
          location ~ ^/(api|authenticate)/ {
              if ($is_preflight) {
                  add_header "Access-Control-Allow-Origin"      "https://console-encryptgate.net" always;
                  add_header "Access-Control-Allow-Methods"     "GET, POST, OPTIONS, PUT, DELETE"       always;
                  add_header "Access-Control-Allow-Headers"     "Authorization, Content-Type, Accept, Origin, X-Requested-With" always;
                  add_header "Access-Control-Allow-Credentials" "true"                                always;
                  add_header "Access-Control-Max-Age"           "86400"                               always;
                  add_header "Content-Type"                     "text/plain; charset=UTF-8"           always;
                  add_header "Content-Length"                   "0"                                   always;
                  return 204;
              }

              # For real GET/POST/PUT/DELETE, proxy to Flask on port 8080
              proxy_pass         http://127.0.0.1:8080;
              proxy_http_version 1.1;
              proxy_set_header   Host              $host;
              proxy_set_header   X-Real-IP         $remote_addr;
              proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
              proxy_set_header   X-Forwarded-Proto $scheme;

              # Always add CORS headers on the actual response
              add_header "Access-Control-Allow-Origin"      "https://console-encryptgate.net" always;
              add_header "Access-Control-Allow-Credentials" "true"                                always;
          }
      }
