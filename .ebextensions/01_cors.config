# -------------------------
# nginx.conf (or included)
# -------------------------

# 1) Define a “map” so we can easily detect OPTIONS requests:
map $request_method $is_options {
    default    0;
    OPTIONS    1;
}

server {
    listen 80;
    server_name  _;   # or your EC2 public DNS / load-balancer name

    # ----------------------------------------------------
    # 1) Handle OPTIONS preflight for anything under /api
    # ----------------------------------------------------
    location ~ ^/api/ {
        if ($is_options) {
            # Preflight CORS response:
            add_header Access-Control-Allow-Origin   https://console-encryptgate.net always;
            add_header Access-Control-Allow-Methods  "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers  "Authorization, Content-Type, Accept, Origin, X-Requested-With" always;
            add_header Access-Control-Allow-Credentials "true" always;
            add_header Access-Control-Max-Age 86400 always;

            # No response body:
            add_header Content-Length 0 always;
            add_header Content-Type "text/plain; charset=UTF-8" always;
            return 204;
        }

        # ------------------------------------------------
        # 2) For non-OPTIONS, proxy to Flask/Gunicorn backend
        # ------------------------------------------------
        proxy_pass       http://127.0.0.1:5000;    # ← adjust if your app listens elsewhere
        proxy_set_header Host                $host;
        proxy_set_header X-Real-IP           $remote_addr;
        proxy_set_header X-Forwarded-For     $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto   $scheme;

        # Must still send at least Allow-Origin (and Allow-Credentials if needed)
        add_header Access-Control-Allow-Origin   https://console-encryptgate.net always;
        add_header Access-Control-Allow-Credentials "true" always;
        # (Browsers do not require Allow-Methods/Allow-Headers on non-OPTIONS)
    }

    # ----------------------------------------------------
    # If you have a standalone /authenticate outside /api/
    # ----------------------------------------------------
    location = /authenticate {
        if ($is_options) {
            add_header Access-Control-Allow-Origin   https://console-encryptgate.net always;
            add_header Access-Control-Allow-Methods  "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers  "Authorization, Content-Type, Accept, Origin, X-Requested-With" always;
            add_header Access-Control-Allow-Credentials "true" always;
            add_header Access-Control-Max-Age 86400 always;
            add_header Content-Length 0 always;
            add_header Content-Type "text/plain; charset=UTF-8" always;
            return 204;
        }

        proxy_pass       http://127.0.0.1:5000/authenticate;
        proxy_set_header Host                $host;
        proxy_set_header X-Real-IP           $remote_addr;
        proxy_set_header X-Forwarded-For     $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto   $scheme;

        add_header Access-Control-Allow-Origin   https://console-encryptgate.net always;
        add_header Access-Control-Allow-Credentials "true" always;
    }

    # ------------------------------------------------
    # (Optional) serve static files or other routes
    # ------------------------------------------------
    location / {
        root   /var/www/html;
        index  index.html;
    }
}
