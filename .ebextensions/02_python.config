option_settings:
  aws:elasticbeanstalk:container:python:
    WSGIPath: wsgi:application
    NumProcesses: 1
    NumThreads: 15

  aws:elasticbeanstalk:application:environment:
    PYTHONPATH: "/var/app/current:/var/app/venv/staging-LQM1lest/lib/python3.9/site-packages"
    PORT: "8080"
    FLASK_APP: "main.py"
    CORS_ORIGINS: "https://console-encryptgate.net"

packages:
  yum:
    python3-devel: []
    gcc: []

container_commands:
  01_find_venv:
    command: |
      echo "Finding virtual environment..."
      VENV_PATH=$(find /var/app/venv -name "staging-*" -type d | head -1)
      echo "Found venv at: $VENV_PATH"
      echo "export VENV_PATH=$VENV_PATH" > /tmp/venv_path.sh

  02_upgrade_pip:
    command: |
      source /tmp/venv_path.sh
      $VENV_PATH/bin/python -m pip install --upgrade pip setuptools wheel

  03_install_requirements:
    command: |
      source /tmp/venv_path.sh
      $VENV_PATH/bin/pip install -r /var/app/current/requirements.txt

  04_create_log_directory:
    command: |
      mkdir -p /var/log/encryptgate
      chmod -R 755 /var/log/encryptgate
      chown -R wsgi:wsgi /var/log/encryptgate || true
      chown -R webapp:webapp /var/log/encryptgate || true

  05_cleanup_old_processes:
    command: |
      pkill -9 -f gunicorn || true
      fuser -k 8080/tcp || true

  06_test_flask_import:
    command: |
      source /tmp/venv_path.sh
      $VENV_PATH/bin/python -c "import flask; import flask_cors; print('Flask packages OK')"

  07_create_wsgi_wrapper:
    command: |
      source /tmp/venv_path.sh
      cat > /var/app/current/start_app.sh << 'EOF'
#!/bin/bash
source /tmp/venv_path.sh
export PYTHONPATH="/var/app/current:$VENV_PATH/lib/python3.9/site-packages"
export FLASK_APP="main.py"
export CORS_ORIGINS="https://console-encryptgate.net"
cd /var/app/current
$VENV_PATH/bin/gunicorn --bind 0.0.0.0:8080 wsgi:application
EOF
      chmod +x /var/app/current/start_app.sh